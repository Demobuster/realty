<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">

    <!-- enable use-expressions -->
	<http auto-config="true" use-expressions="true">
		<intercept-url pattern="/admin**" access="hasAnyRole('ROLE_ADMIN','ROLE_USER','ROLE_CREATOR')" />
		<intercept-url pattern="/property**" access="hasAnyRole('ROLE_ADMIN','ROLE_USER','ROLE_CREATOR')" />
		<intercept-url pattern="/userPage**" access="hasAnyRole('ROLE_ADMIN','ROLE_USER','ROLE_CREATOR')" />
		<intercept-url pattern="/addProperty**" access="hasRole('ROLE_CREATOR')" />
		<intercept-url pattern="/dashboard**" access="hasAnyRole('ROLE_ADMIN','ROLE_CREATOR')" />
		<intercept-url pattern="/usersManagement**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/propManagement**" access="hasRole('ROLE_CREATOR')" />
		<intercept-url pattern="/getUsersList**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/getUsersHire**" access="hasAnyRole('ROLE_ADMIN','ROLE_USER','ROLE_CREATOR')" />
		
		<!-- access denied page -->
		<access-denied-handler error-page="/403" />
		<form-login 
		    login-page="/login" 
		    default-target-url="/welcome" 
			authentication-failure-url="/login?error" 
			username-parameter="username"
			password-parameter="password" />
		<logout logout-success-url="/login?logout"  />

		<!-- Prevent multi-enter. Only unique worksession allowed. Paralell access will be denied and redirected
		 	 to 'authentication-failure-url' page -->
		<session-management 
				invalid-session-url="/welcome"
				session-fixation-protection="newSession">
			<concurrency-control max-sessions="1" error-if-maximum-exceeded="true" />
		</session-management>

	</http>
	
	<!-- Select users and user_roles from database -->
	<authentication-manager>
		<authentication-provider>
			<password-encoder ref="encoder" /> 
			<jdbc-user-service data-source-ref="myDataSource"
				users-by-username-query=
					"select username,password, enabled from USERS where username=?"
				authorities-by-username-query=
					"select username, role from USER_ROLES where username =?  " />
		</authentication-provider>
	</authentication-manager>
	
	<beans:bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
		<beans:constructor-arg name="strength" value="10" />
	</beans:bean>

</beans:beans>